version: 2.1

orbs:
  rok8s-scripts: fairwinds/rok8s-scripts@11

references:
  enable_experimental_features: &enable_experimental_docker_features
    run:
      name: enable experimental features
      command: |
        set -ex
        apk --update add openssh
        ssh remote-docker \<<EOF
          sudo bash -c 'echo "{\"experimental\": true}" > /etc/docker/daemon.json'
          sudo systemctl restart docker
        EOF
  install_vault: &install_vault
    run:
      name: install hashicorp vault
      command: |
        cd /tmp
        curl -LO https://releases.hashicorp.com/vault/1.8.1/vault_1.8.1_linux_amd64.zip
        unzip vault_1.8.1_linux_amd64.zip
        mv vault /usr/bin/vault
        apk --update add yq
  e2e_configuration: &e2e_configuration
    pre_script: e2e/pre.sh
    script: e2e/run.sh
    command_runner_image: quay.io/reactiveops/ci-images:v11-stretch
    enable_docker_layer_caching: true
    store-test-results: /tmp/test-results
    attach-workspace: true
    kind_version: 0.11.1
    requires:
      - test
      - snapshot
    filters:
      branches:
        only: /.*/
      tags:
        ignore: /v.*/

jobs:
  test:
    working_directory: /go/src/github.com/fairwindsops/goldilocks
    docker:
      - image: circleci/golang:1.17.1
        environment:
          GL_DEBUG: linters_output
          GOPACKAGESPRINTGOLISTERRORS: "1"
    steps:
      - checkout
      - run:
          name: golangci-lint
          environment:
            GOLANGCI_LINT_VERSION: 1.41.1
            GOLANGCI_LINT_CHECKSUM: 23e1078ab00a750afcde7e7eb5aab8e908ef18bee5486eeaa2d52ee57d178580
          command: |
            curl -OL https://github.com/golangci/golangci-lint/releases/download/v${GOLANGCI_LINT_VERSION}/golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64.tar.gz
            [[ "$(sha256sum golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64.tar.gz)" == "${GOLANGCI_LINT_CHECKSUM}  golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64.tar.gz" ]]
            tar xzf golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64.tar.gz && mv golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64/golangci-lint $(go env GOPATH)/bin/golangci-lint
            go mod tidy
            golangci-lint run -v --timeout 2m0s
      - run:
          name: Run Tests
          command: make test

  build_and_release:
    working_directory: /go/src/github.com/fairwindsops/goldilocks
    resource_class: large
    shell: /bin/bash
    docker:
      - image: goreleaser/goreleaser:v0.183.0
        environment:
          GO111MODULE: "on"
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.6
      - *enable_experimental_docker_features
      - *install_vault
      - rok8s-scripts/get_vault_env:
          vault_path: repo/global/env
      - rok8s-scripts/docker_login:
          registry: "quay.io"
          username: $FAIRWINDS_QUAY_USER
          password-variable: FAIRWINDS_QUAY_TOKEN
      - run: goreleaser
  snapshot:
    working_directory: /go/src/github.com/fairwindsops/goldilocks
    resource_class: large
    docker:
      - image: goreleaser/goreleaser:v0.183.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.6
      - *enable_experimental_docker_features
      - run: goreleaser --snapshot
      - run: mkdir -p /tmp/workspace/docker_save/
      - run: docker save quay.io/fairwinds/goldilocks:${CIRCLE_SHA1}-amd64 > /tmp/workspace/docker_save/goldilocks_${CIRCLE_SHA1}-amd64.tar
      - persist_to_workspace:
          root: /tmp/workspace/
          paths:
          - docker_save
      - store_artifacts:
          path: dist
          destination: snapshot
  publish_docs:
    docker:
      - image: cimg/node:15.5.1
    steps:
      - checkout
      - run:
          name: Build Docs Site
          command: |
            set -e
            cd ./docs
            npm install
            npm run check-links
            npm run build
      - run:
          name: Install AWS CLI
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
      - run:
          name: Publish Docs Site to S3
          command: |
            cd ./dist
            aws s3 sync ./ s3://goldilocks.docs.fairwinds.com --delete

workflows:
  version: 2
  tests:
    jobs:
      - test
      - snapshot:
          context: org-global
          requires:
            - test
      - rok8s-scripts/kubernetes_e2e_tests:
          name: "End-To-End Kubernetes 1.19.7"
          kind_node_image: "kindest/node:v1.19.7@sha256:a70639454e97a4b733f9d9b67e12c01f6b0297449d5b9cbbef87473458e26dca"
          <<: *e2e_configuration
      - rok8s-scripts/kubernetes_e2e_tests:
          name: "End-To-End Kubernetes 1.20.2"
          kind_node_image: "kindest/node:v1.20.2@sha256:15d3b5c4f521a84896ed1ead1b14e4774d02202d5c65ab68f30eeaf310a3b1a7"
          <<: *e2e_configuration
      - rok8s-scripts/kubernetes_e2e_tests:
          name: "End-To-End Kubernetes 1.21.1"
          kind_node_image: "kindest/node:v1.21.2@sha256:9d07ff05e4afefbba983fac311807b3c17a5f36e7061f6cb7e2ba756255b2be4"
          <<: *e2e_configuration
  release:
    jobs:
      - build_and_release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
      - publish_docs:
          requires:
            - build_and_release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
