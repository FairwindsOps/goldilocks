version: "2"
name: "Basic Operation"
vars:
  timeout: 60s
  vpa-wait: 30
testcases:
- name: Setup demo namespace
  steps:
  - script: |
      kubectl create ns demo
      helm repo add fairwinds-incubator https://charts.fairwinds.com/incubator
      helm install basic-demo fairwinds-incubator/basic-demo --namespace demo --version=0.4.0
      kubectl -n demo wait deployment --timeout={{.timeout}} --for condition=available -l app.kubernetes.io/name=basic-demo
- name: No VPA Anywhere Before Labels
  steps:
  - script: kubectl get vpa --all-namespaces
    assertions:
    - result.code ShouldEqual 0
    - result.systemout ShouldEqual ""
    - result.systemerr ShouldContainSubstring "No resources found"
- name: VPA in demo namespace
  steps:
  - script: kubectl label ns demo goldilocks.fairwinds.com/enabled=true --overwrite
  - script: sleep {{.vpa-wait}}
  - script: kubectl get verticalpodautoscalers.autoscaling.k8s.io -n demo goldilocks-basic-demo -oname
    assertions:
    - result.code ShouldEqual 0
    - result.systemout ShouldEqual "verticalpodautoscaler.autoscaling.k8s.io/goldilocks-basic-demo"
- name: Setup redis in statefulset-demo namespace
  steps:
  - script: |
      kubectl create ns statefulset-demo
      helm install redis bitnami/redis --namespace statefulset-demo --version=16.12.1 --set architecture=replication
- name: No VPA in statefulset-demo namespace Before Labels
  steps:
  - script: kubectl get vpa -n statefulset-demo
    assertions:
    - result.code ShouldEqual 0
    - result.systemout ShouldEqual ""
    - result.systemerr ShouldContainSubstring "No resources found"
- name: VPA in statefulset-demo namespace
  steps:
  - script: kubectl label ns statefulset-demo goldilocks.fairwinds.com/enabled=true --overwrite
  - script: sleep {{.vpa-wait}}
  - script: kubectl get verticalpodautoscalers.autoscaling.k8s.io -n statefulset-demo goldilocks-redis-replicas -oname
    assertions:
    - result.code ShouldEqual 0
    - result.systemout ShouldEqual "verticalpodautoscaler.autoscaling.k8s.io/goldilocks-redis-replicas"
- name: Setup demo-resource-policy namespace
  steps:
  - script: |
      kubectl create ns demo-resource-policy
      helm repo add fairwinds-incubator https://charts.fairwinds.com/incubator
      helm install basic-demo fairwinds-incubator/basic-demo --namespace demo-resource-policy --version=0.4.0
      kubectl -n demo-resource-policy wait deployment --timeout={{.timeout}} --for condition=available -l app.kubernetes.io/name=basic-demo
- name: VPA with Resource Policy in demo-resource-policy namespace
  steps:
  - script: |
      kubectl annotate ns demo-resource-policy goldilocks.fairwinds.com/vpa-resource-policy='{ "containerPolicies": [ { "containerName": "nginx", "minAllowed": { "cpu": "250m", "memory": "100Mi" } } ] }' --overwrite
  - script: kubectl label ns demo-resource-policy goldilocks.fairwinds.com/enabled=true --overwrite
  - script: sleep {{.vpa-wait}}
  - script: kubectl get verticalpodautoscalers.autoscaling.k8s.io -n demo-resource-policy goldilocks-basic-demo -o=jsonpath='{.spec.resourcePolicy.containerPolicies[]}'
    assertions:
    - result.code ShouldEqual 0
    - result.systemout ShouldEqual '{"containerName":"nginx","minAllowed":{"cpu":"250m","memory":"100Mi"}}'
